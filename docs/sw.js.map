{
  "version": 3,
  "sources": ["../sw/utils/announceClients.js", "../sw/utils/interceptSwErrors.js", "../sw/utils/setupSw.js", "../sw/sw.js"],
  "sourcesContent": ["// =====================================================================================================================\n//  P U B L I C\n// =====================================================================================================================\n/**\n *\n */\nconst announceClients = (message) => {\n    self.clients.matchAll().then(function (clients) {\n        if (clients) {\n            for (const client of clients) {\n                client.postMessage(message);\n            }\n        }\n    });\n};\n\n// =====================================================================================================================\n//  E X P O R T\n// =====================================================================================================================\nexport default announceClients;\n", "import announceClients from './announceClients.js';\n\n// =====================================================================================================================\n//  P U B L I C\n// =====================================================================================================================\n/**\n *\n */\nconst interceptSwErrors = () => {\n    self.addEventListener('error', onError, true);\n    self.addEventListener('unhandledrejection', onUnhandledRejection, true);\n};\n\n// =====================================================================================================================\n//  P R I V A T E\n// =====================================================================================================================\n/**\n *\n */\nconst onError = (event) => {\n    panic(event.type, event);\n};\n\n/**\n *\n */\nconst onUnhandledRejection = (event) => {\n    panic(event.type, event.reason);\n};\n\n/**\n *\n */\nconst panic = (type, {message, stack}) => {\n    announceClients({type: 'PANIC', panic: {type, message, stack}});\n};\n\n// =====================================================================================================================\n//  E X P O R T\n// =====================================================================================================================\ninterceptSwErrors();\n", "import announceClients from './announceClients.js';\n\n// =====================================================================================================================\n//  D E C L A R A T I O N S\n// =====================================================================================================================\nlet isUnregistered = false;\nlet currentVersion;\nlet currentOptions;\n\n// =====================================================================================================================\n//  P U B L I C\n// =====================================================================================================================\n/**\n * https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps/Tutorials/CycleTracker/Service_workers\n */\nconst setupSw = async (version, options = {}) => {\n    currentVersion = version;\n    currentOptions = options;\n\n    self.skipWaiting(); // TODO find out if this is working\n    self.addEventListener('install', onWorkerInstall);\n    self.addEventListener('activate', onWorkerActivate);\n    self.addEventListener('fetch', onWorkerFetch);\n};\n\n// =====================================================================================================================\n//  P R I V A T E\n// =====================================================================================================================\n/**\n * Returns the current directory, without a trailing slash.\n */\nconst getSwHome = () => {\n    return self.location.href.replace(/\\/[^/]*$/, '');\n};\n\n/**\n *\n */\nconst onWorkerInstall = (event) => {\n    // console.log('SW: Install of', currentVersion);\n    self.skipWaiting(); // TODO find out if this is working\n    event.waitUntil(\n        (async () => {\n            const cache = await caches.open(currentVersion);\n            const home = getSwHome();\n            const absolutePaths = [];\n            const {cachedPaths = []} = currentOptions;\n            for (const relativePath of cachedPaths) {\n                absolutePaths.push(home + relativePath);\n            }\n            await cache.addAll(absolutePaths);\n        })(),\n    );\n};\n\n/**\n *\n */\nconst onWorkerActivate = (event) => {\n    // console.log('SW: Activation of', currentVersion);\n    event.waitUntil(\n        (async () => {\n            const names = await caches.keys();\n            await Promise.all(\n                names.map((name) => {\n                    if (name !== currentVersion) {\n                        return caches.delete(name);\n                    }\n                }),\n            );\n            await self.clients.claim();\n            announceClients({type: 'ACTIVATED', version: currentVersion});\n        })(),\n    );\n};\n\n/**\n *\n */\nconst onWorkerFetch = (event) => {\n    if (isUnregistered) {\n        return;\n    }\n\n    // console.log('SW: Fetch', event.request.url);\n    const {url, mode} = event.request;\n\n    const {ignoredFetches = []} = currentOptions;\n    for (const key of ignoredFetches) {\n        if (url.includes(key)) {\n            return;\n        }\n    }\n\n    let responsePromise;\n    if (mode === 'navigate') {\n        responsePromise = respondToRoot();\n    } else {\n        responsePromise = respondToFile(url);\n    }\n    event.respondWith(responsePromise);\n};\n\n/**\n *\n */\nconst respondToRoot = async () => {\n    const home = getSwHome(); // without trailing slash, e.g. https://foo.com/bar\n    const cachedResponse = await caches.match(home + '/');\n    const freshResponse = await fetchUrl(home + '/index.html?' + Math.random());\n    if (freshResponse) {\n        // console.log('We are online.');\n        if (cachedResponse) {\n            // console.log('We have cache.');\n            const cachedText = await cachedResponse.clone().text();\n            const freshText = await freshResponse.clone().text();\n            if (cachedText !== freshText) {\n                // console.log('Something changed!');\n                isUnregistered = true;\n                await self.registration.unregister();\n            }\n        }\n        return freshResponse;\n    } else {\n        // console.log('We are offline!');\n        return cachedResponse;\n    }\n};\n\n/**\n *\n */\nconst fetchUrl = async (url) => {\n    try {\n        return await fetch(url);\n    } catch (e) {\n        // Nothing\n    }\n};\n\n/**\n *\n */\nconst respondToFile = async (url) => {\n    const cachedResponse = await caches.match(url);\n    return cachedResponse || new Response(null, {status: 404});\n};\n\n// =====================================================================================================================\n//  E X P O R T\n// =====================================================================================================================\nexport default setupSw;\n", "import './utils/interceptSwErrors.js';\nimport setupSw from './utils/setupSw.js';\n\n// =====================================================================================================================\n//  D E C L A R A T I O N S\n// =====================================================================================================================\nconst CACHED_PATHS = '@CACHED_PATHS'; // DO NOT EDIT MANUALLY! This is handled by the build script.\nconst IGNORED_FETCHES = [\n    'googleapis', // https://oauth2.googleapis.com/token\n    'google', // https://accounts.google.com/gsi/client\n    'dot.png', // ./meta/dot.png\n];\n\n// =====================================================================================================================\n//  P U B L I C\n// =====================================================================================================================\n/**\n *\n */\nconst run = async () => {\n    const version = JSON.stringify(CACHED_PATHS);\n    await setupSw(version, {\n        cachedPaths: CACHED_PATHS,\n        ignoredFetches: IGNORED_FETCHES,\n    });\n};\n\n// =====================================================================================================================\n//  R U N\n// =====================================================================================================================\nrun();\n"],
  "mappings": "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",
  "names": []
}
